% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/tradeoff_batch.R
\name{tradeoff_batch}
\alias{tradeoff_batch}
\title{Runs tradeoff_mod in batch mode}
\usage{
tradeoff_batch(parms, input_key = "ZA", todisk = TRUE, silent = FALSE)
}
\arguments{
\item{parms}{Matrix or data.frame providing input parameters permutations}

\item{input_key}{Two letter location code indicating input data to load.}

\item{todisk}{TRUE, in which case output data.table is written to disk}

\item{silent}{Silent or verbose model. TRUE (default) or FALSE}
}
\value{
List of tradeoff_mod impact data.frames and conversion data.table if
todisk is FALSE
}
\description{
Function to drive large numbers of iteration of trademod
}
\note{
This is one place where parallelizing could be useful, replacing for
loop with foreach.
}
\examples{
# Define parameter sets
# Constraint space
cnames <- c("Ag", "C", "bd", "cost")
cblist <- list(cb1 <- c(1, 0, 0, 0),
               cb2 <- c(1, 1, 0, 0),
               cb3 <- c(1, 1, 1, 0),
               cb1r <- c(1, 0, 0, 1),
               cb2r <- c(1, 1, 0, 1),
               cb3r <- c(1, 1, 1, 1))

# ymod space
yblist <- list(yb1 <- c(1, 1),
               yb2 <- c(0.8, 1),
               yb3 <- c(1.2, 1))
# prod_targ space
tnames <- c("maize", "cassava", "ground", "cotton", "soy", "pulse",
            "sunflower", "sugarcane", "wheat")
targlist <- list(targ1 <- rep(2, length(tnames)),
                 targ2 <- rep(3, length(tnames)),
                 targ3 <- rep(4, length(tnames)))

parms <- do.call(rbind, lapply(yblist, function(x) {
  do.call(rbind, lapply(targlist, function(y) {
    do.call(rbind, lapply(cblist, function(z) {
      v <- c(z, x, y)
      names(v) <- c(cnames, "y1", "y2", tnames)
      v
   }))
 }))
}))
parms <- parms[1:5, ]
batch_test <- tradeoff_batch(parms = parms, input_key = "ZA", todisk = FALSE,
                             silent = TRUE)
}

